{"py/object": "sklearn.svm._classes.SVC", "py/state": {"decision_function_shape": "ovr", "break_ties": false, "kernel": "linear", "degree": 3, "gamma": 0.1, "coef0": 0.0, "tol": 0.001, "C": 1, "nu": 0.0, "epsilon": 0.0, "shrinking": true, "probability": true, "cache_size": 200, "class_weight": "balanced", "verbose": false, "max_iter": -1, "random_state": null, "_sparse": false, "n_features_in_": 300, "class_weight_": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [3.0, 0.6, 1.0]}, "classes_": {"py/object": "numpy.ndarray", "dtype": "int64", "values": [0, 1, 2]}, "_gamma": 0.1, "support_": {"py/object": "numpy.ndarray", "dtype": "int32", "values": [8, 2, 3, 4, 5, 6, 7]}, "support_vectors_": {"py/object": "numpy.ndarray", "values": "", "shape": [7, 300], "dtype": "float64", "byteorder": "<"}, "_n_support": {"py/object": "numpy.ndarray", "dtype": "int32", "values": [1, 3, 3]}, "dual_coef_": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [[0.002298234526247619, -7.876528438927416e-06, -0.0003612754419857003, -0.001929082555822991, -0.0008756152135368422, -0.00034333626919524126, -0.0010668641848269184], [0.0022858156675590016, 0.00032827612356039793, 0.005463168186492726, 0.010825564593160633, -0.006036817924248313, -0.0042927181136991985, -0.006287472865266245]]}, "intercept_": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [-0.5219011940088389, -0.5705704719808573, -0.07142941414460897]}, "_probA": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [0.6812517790729506, 7.106884385414726, -0.35950549261319403]}, "_probB": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [1.855188480513405, 6.828845610534249, -0.2928199175691094]}, "fit_status_": 0, "shape_fit_": {"py/tuple": [9, 300]}, "_intercept_": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [-0.5219011940088389, -0.5705704719808573, -0.07142941414460897]}, "_dual_coef_": {"py/id": 11}, "_sklearn_version": "1.0.2"}}